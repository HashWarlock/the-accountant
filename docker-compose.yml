version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dstack-js-sdk-demo
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:./dev.db
      - EXPOSE_INFO=true
    volumes:
      # Mount dstack socket for TEE access
      - /var/run/dstack.sock:/var/run/dstack.sock:ro
      # Persist SQLite database
      - ./prisma/dev.db:/app/prisma/dev.db
    networks:
      - dstack-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETUID
      - SETGID
    read_only: true
    tmpfs:
      - /tmp
      - /app/.next/server
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M

  # Optional: Database viewer for development
  db-viewer:
    image: adminer
    container_name: dstack-db-viewer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=sqlite
    networks:
      - dstack-network
    profiles:
      - debug
    restart: unless-stopped

networks:
  dstack-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  db-data: